// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Article {
  articleId    String @id @default(uuid()) @map("article_id")
  title String @db.VarChar(200)
  content String @db.Text
  slug   String @unique @db.VarChar(500)
  author String? @db.VarChar(100)
  thumbnailUrl String @db.Text @map("thumbnail_url")
  thumbnailFilename String @db.VarChar(100) @map("thumbnail_filename")
  thumbnailAlt String @db.VarChar(100) @map("thumbnail_alt")
  categoryId Int @db.UnsignedInt @map("category_id")
  category Category @relation(fields: [categoryId],references: [categoryId], onDelete: Restrict)
  labels LabelOnArticle[]
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("articles")
}

model Category {
  categoryId Int @db.UnsignedInt @default(autoincrement()) @id @map("category_id")
  name String @db.VarChar(20)
  articles Article[]
  createdAt         DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("categories")
}

model LabelOnArticle {
  labelId   Int @db.UnsignedInt @map("label_id")
  label     Label @relation(fields: [labelId], references: [labelId])
  articleId String  @map("article_id")
  article   Article      @relation(fields: [articleId], references: [articleId])

  @@id([labelId, articleId])
  @@map("labels_on_articles")
}

model Label {
  labelId Int  @db.UnsignedInt    @id @default(autoincrement()) @map("label_id")
  name      String @db.VarChar(20)
  articles LabelOnArticle[]
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt      DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("labels")
}

model File {
  fileId        Int   @db.UnsignedInt    @id @default(autoincrement()) @map("file_id")
  filename  String   @db.VarChar(100)
  mimetype  String   @db.VarChar(20)
  extension String   @db.VarChar(10)
  alt       String   @db.VarChar(100)
  url       String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("files")
}

model User {
  userId    String @id @default(uuid()) @map("user_id")
  username   String   @db.VarChar(100) @unique
  password   String   @db.VarChar(100)
  token      String?  @db.VarChar(300)
  role       UserRole
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt  DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("users")
}

enum UserRole {
  admin
}